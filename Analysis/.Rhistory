library(template)
library(template)
devtools::document()
getwd()
setwd("topsecret/")
devtools::document()
setwd("Analysis/")
devtools::document()
vault <- get_secret_vault()
vault
library(template)
devtools::document()
library(template)
getwd()
setwd("topsecret/Analysis/")
devtools::document()
library(template)
system.file("user_keys", package = "secret")
list_secrets()
library(secret)
list_secrets()
vault <- get_secret_vault()
list_secrets()
list_secrets(vault)
get_secret( "db000fe6_host", key = openssl::read_pubkey( local_key() ). vault )
local_key()
openssl::read_pubkey( local_key() )
my_key()
get_secret( name="db000fe6_host", key = local_key(). vault=vault )
get_secret( name="db000fe6_host", key = local_key(), vault=vault )
list_users()
list_secrets(vault)
clearSecretsWithSubstring("db000",vault = vault)
list_secrets(vault)
list_users()
keys()
add_user( email='markrbower', public_key=local_key(), vault=vault )
list_users(vault=vault)
list_secrets(vault)
add_secret(name="laptop_host","localhost","markrbower",vault = vault)
add_secret(name="laptop_user","root","markrbower",vault = vault)
add_secret(name="laptop_password","","markrbower",vault = vault)
library(template)
library(template)
library(topsecret)
vault <- get_secret_vault()
clearSecretsWithSubstring("laptop",vault)
vault <- get_secret_vault()
clearSecretsWithSubstring("laptop",vault)
clearSecretsWithSubstring("MEF",vault)
add_secret(name="laptop_password","",c("markrbower"),vault = vault)
get_secret(name="laptop_password",key=local_key(),vault=vault)
mark.public = keys( "markrbower.pub")
get_secret(name="laptop_password",key=mark.public,vault=vault)
mark.private = keys( "markrbower.pem")
get_secret(name="laptop_password",key=mark.private,vault=vault)
list_secrets(vault)
mark.private = keys( "markrbower.pub")
mark.public = keys( "markrbower.pub")
get_secret(name="laptop_password",key=mark.public,vault=vault)
list_secrets(vault)
Sys.info()[[‘user’]]
Sys.info()
get_secret(name="laptop_password",key=local_key(),vault=vault)
?get_secret
add_secret("secret", value = "shh!", users = c("markrbower"),vault=vault)
get_secret(name="secret",key=local_key(),vault=vault)
user_keys_dir <- file.path(system.file(package = "secret"), "user_keys")
user_keys_dir
key <- function(x)file.path(user_keys_dir, x)
key
markrbower.public <- key("markrbower.pub")
markrbower.public
get_secret(name="secret",key=key('markrbower.pem'),vault=vault)
get_secret(name="secret",key=key('markrbower.pub'),vault=vault)
list_secrets(vault)
get_secret(name="secret",key('markrbower.pub'),vault=vault)
si[['user']]
Sys.info[['user']]
Sys.info()[['user']]
openssl::read_pubkey( local_key() )
get_secret(name="secret",key=openssl::read_pubkey( local_key() ),vault=vault)
library(openssl)
openssl::read_pubkey()
openssl::read_pubkey("markrbower")
openssl::read_pubkey(local_key())
add_secret("marco",value="polo",users=c("markrbower"),vault = vault)
list_secrets(vault)
get_secret( "marco", key=local_key(), vault=vault )
vault <- file.path(tempdir(), ".vault")
if (dir.exists(vault)) unlink(vault)
create_vault(vault)
markrbower_public <- keys("markrbower.pub")
markrbower_private <- keys("markrbower.pem")
create_vault(vault)
add_user("markrbower", public_key = markrbower_public, vault = vault)
keys <- function(x){
file.path(system.file("user_keys", package = "secret"), x)
}
markrbower_public <- keys("markrbower.pub")
markrbower_private <- keys("markrbower.pem")
add_user("markrbower", public_key = markrbower_public, vault = vault)
add_user("markrbower", public_key = markrbower_public, vault = vault)
add_user("markrbower", local_key(), vault = NULL)
local_key()
add_user("markrbower", local_key(), vault = NULL)
\
Sys.getenv(USER_KEY)
try(local_key(), silent = TRUE)
vault
dir(vault)
key_dir <- file.path(system.file(package = "secret"), "user_keys")
key_dir
add_user("markrbower",local_key(), vault=vault)
key_dir <- file.path(system.file(package = "secret"), "user_keys")
key_dir
list_users(vault)
secret_to_keep <- c(password = "my_password")
add_secret("secret_one", secret_to_keep, users = "markrbower", vault = vault)
list_secrets(vault)
get_secret("secret_one", key = local_key(), vault = vault)
add_secret("MEF_password", "erlichda", users = "markrbower", vault = vault)
list_secrets(vault)
get_secret("MEF_password", key = local_key(), vault = vault)
openssl::read_pubkey( local_key() )
local_key()
Sys.info()[[]]
Sys.info()[['user']]
!file.exists( vault )\
!file.exists( vault )
get_secret("MEF_password", key = local_key(), vault = vault)
list_secrets(vault)
vault <- get_secret_vault()
list_secrets(vault)
vault <- file.path( "~/.secret", ".vault")
vault
dir.exists(vault)
create_vault(vault)
dir.exists(vault)
add_user("markrbower",local_key(), vault=vault)
list_users(vault)
list_secrets(vault)
secret_to_keep <- c(password = "my_password")
add_secret("secret_one", secret_to_keep, users = "markrbower", vault = vault)
list_secrets(vault)
get_secret("secret_one", key = local_key(), vault = vault)
add_secret("MEF_password", "erlichda", users = "markrbower", vault = vault)
list_secrets(vault)
get_secret("MEF_password", key = local_key(), vault = vault)
list_secrets(vault)
get_secret("secret_one", key = "a123", vault = vault)
get_secret("MEF_password", key = local_key(), vault = vault)
vault
class(vault)
install.packages('formatR')
library(topsecret)
vault <- get_secret_vault()
vault
vault <- get_secret_vault()
vault
vault <- get_secret_vault()
debugSource('~/Dropbox/Documents/Concepts/2020_07_14_topsecret/topsecret/Analysis/R/get_secret_vault.R')
vault <- get_secret_vault()
list_secrets(vault)
library(topsecret)
vault
vault <- get_secret_vault()
vault
session_info()
getwd()
setwd('topsecret/Analysis/')
setwd('topsecret/')
devtools::uses_testthat()
devtools::use_testthat()
library(devtools)
devtools::use_testthat()
usethis::use_testthat()
library(topsecret)
getwd()
devtools::document()
getwd()
devtools::document()
devtools::build()
library(topsecret)
devtools::test()
devtools::test()
devtools::test()
devtools::test()
