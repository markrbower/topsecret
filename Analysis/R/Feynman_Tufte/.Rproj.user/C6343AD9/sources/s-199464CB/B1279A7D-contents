#
# Network Properties Outlier
# October 1, 2019
# Mark R. Bower
# Yale University
#
# create table tasks (nodename varchar(128),path varchar(256),data varchar(64),institution varchar(64),lab varchar(32),experiment varchar(32),subject int(11),signaltype varchar(32),iterationtype varchar(32),label varchar(512) not null,centerTime bigint,done boolean,created timestamp default current_timestamp, modified timestamp default current_timestamp on update current_timestamp, primary key (label) );
#
# First time the function is called:
# NPO(dbName='db000fe6',path='~/project/Data/Halo/11',password='erlichda',data='rodentMSO',institution='Yale',lab='NSME',experiment='Halo10sec_10x',subject=11,signalType='AP',centerTime=0,iterationType='directory',range=c(-3000,2000), '--restart' )
#
# Subsequent calls:
# NPO()
#
#
#
#
#
NPO <- function(...) {
  args <- list(...)
  source('~/Dropbox/Documents/Concepts/2019_11_19_NetworkParameterOutlier/Analysis/NPO/R/clearAllDBcons.R')
  source('~/Dropbox/Documents/Concepts/2019_11_19_NetworkParameterOutlier/Analysis/NPO/R/parseArg.R')
  source('~/Dropbox/Documents/Concepts/2019_11_19_NetworkParameterOutlier/Analysis/NPO/R/loadParameters.R')
  source('~/Dropbox/Documents/Concepts/2019_11_19_NetworkParameterOutlier/Analysis/NPO/R/getContextFromTaskTable.R')
  source('~/Dropbox/Documents/Concepts/2019_11_19_NetworkParameterOutlier/Analysis/NPO/R/db.R')
  source('~/Dropbox/Documents/Concepts/2019_11_19_NetworkParameterOutlier/Analysis/NPO/R/checkRestart.R')
  source('~/Dropbox/Documents/Concepts/2019_11_19_NetworkParameterOutlier/Analysis/NPO/R/useArgsAndContextToPlan.R')
  source('~/Dropbox/Documents/Concepts/2019_11_19_NetworkParameterOutlier/Analysis/NPO/R/createTablesForNPO.R')
  source('~/Dropbox/Documents/Concepts/2019_11_19_NetworkParameterOutlier/Analysis/NPO/R/MEF_analysisLoop_batch.R')
  source('~/Dropbox/Documents/Concepts/2019_11_19_NetworkParameterOutlier/Analysis/NPO/R/MEFthenAnalysisLoopOnDirectory.R')
  source('~/Dropbox/Documents/Concepts/2019_11_19_NetworkParameterOutlier/Analysis/NPO/R/MySQL_analysisLoop_P2M_batch.R')
  source('~/Dropbox/Documents/Concepts/2019_11_19_NetworkParameterOutlier/Analysis/NPO/R/MySQL_analysisLoop_M2C_batch.R')
  source('~/Dropbox/Documents/Concepts/2019_11_19_NetworkParameterOutlier/Analysis/NPO/R/generate_graph_filename.R')
  source('~/Dropbox/Documents/Concepts/2019_11_19_NetworkParameterOutlier/Analysis/NPO/R/checkMEFpassword.R')
  
  options(warn=-1)
  options(stringsAsFactors = FALSE);

  # User directives
 # dbName <- 'NSME_halo'
#  dbName <- 'db000fe6'
#  signalType <- parseArg( args, 'signalType' )
#  if ( length(signalType) <= 0 ) {
#    signalType <- 'AP' # Options: 'IIS', 'AP'
#  }
#  query <- 'SET GLOBAL bulk_insert_buffer_size =1024*1024*256;'
#  dbSendQuery( conn, query )
  
  # Handle arguments
#  if ( exists('signalType') && is.null( args$signalType ) ) { # It may be commented out in the file.
#    args <- append( args, list(signaltype=signalType) )    
#  }
  
  clearAllDBcons()
  args <- list(...)
  dbName <- parseArg( args, 'dbName' )
  conn <- db( c(project=dbName) )
  
  # Evaluate the "tasks" table.
  print( 'Getting context' )
  context <- getContextFromTaskTable( conn, args )
  
  print( 'Getting parameters' )
  parameters <- loadParameters( context )
  
  # Create database tables
  print( 'Creating tables' )
  table_names <- createTablesForNPO( conn, context )
  print( 'Tables created' )
  
  # I don't understand what the purpose of this function is. About the only useful thing is checking for a 'restart', which can be done on it's own.
  #  analysisPlan <- useArgsAndContextToPlan( conn, args, context )
  checkRestart( args, conn, table_names, context )
  checkMEFpassword( context ) # Make sure that the secret_vault has the correct password
  
  # Find the channel names and fill the progress table
  # Find peaks
  #    MEF_analysisLoop_batch( conn, 'erlichda', table_names, subject, seizureTime )
  # MEF_analysisLoop_directory( dbName, table_names, context )
  MEFthenAnalysisLoopOnDirectory( parameters, dbName, table_names, context )
  
  # Find communities
  # MySQL_analysisLoop_P2M_batch( conn, '', table_names, subject, seizureTime )
  MySQL_analysisLoop_P2M_batch( conn, parameters, dbName, table_names, context )
  
  # Find clusters
  # MySQL_analysisLoop_M2C_batch( conn, '', table_names, subject, seizureTime )
  

}
